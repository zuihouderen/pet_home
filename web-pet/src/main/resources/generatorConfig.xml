<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 导入配置文件 -->
    <properties resource="application.properties"/>

    <!-- defaultModelType="flat" 设置复合主键时不单独为主键创建实体 -->
    <context id="MySql" defaultModelType="flat">

        <!-- 生成的POJO实现java.io.Serializable接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />

        <!--注释-->
        <commentGenerator>
            <!-- 将数据库中表的字段描述信息添加到注释 -->
            <property name="addRemarkComments" value="true"/>
            <!-- 注释里不添加日期 -->
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!-- 数据库连接，直接通过${}读取application.properties里的配置 -->
        <jdbcConnection
                driverClass="${spring.datasource.driver-class-name}"
                connectionURL="${spring.datasource.url}"
                userId="${spring.datasource.username}"
                password="${spring.datasource.password}">
        </jdbcConnection>


        <!-- 生成POJO对象，并将类放到com.songguoliang.springboot.entity包下 -->
        <javaModelGenerator targetPackage="com.example.webpet.entity" targetProject="src/main/java"></javaModelGenerator>

        <!-- 生成mapper xml文件，并放到resources下的mapper文件夹下 -->
        <sqlMapGenerator targetPackage="mapper"  targetProject="src/main/resources"></sqlMapGenerator>


        <!-- 生成mapper xml对应dao接口，放到com.songguoliang.springboot.mapper包下-->
        <javaClientGenerator targetPackage="com.example.webpet.mapper" targetProject="src/main/java" type="XMLMAPPER"></javaClientGenerator>

        <!-- table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符 -->
        <table tableName="user" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="pet" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="pdynamic" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="plog" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="pdcomment" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="pdlove" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="pdkeep" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="petknowledge" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="question" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>
        <table tableName="message" >
            <property name="ignoreQualifiersAtRuntime" value="true"/>
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
        </table>


    </context>
</generatorConfiguration>
